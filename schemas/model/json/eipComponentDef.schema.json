{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/codice/keip-canvas/schemas/v0.3.0/eipComponentDef.schema.json",
  "title": "EipComponentDefinition",
  "description": "Defines the collection of EIP components available for use",
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "$ref": "#/$defs/EipComponent"
    }
  },
  "$defs": {
    "Restriction": {
      "description": "Configures a constraint on the possible values of an attribute. Currently, only string enum constraints are supported.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "enum"
          ]
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "Attribute": {
      "description": "Defines an EIP attribute",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "boolean",
            "number"
          ]
        },
        "description": {
          "type": "string"
        },
        "default": {
          "$ref": "attributeType.schema.json"
        },
        "required": {
          "type": "boolean"
        },
        "restriction": {
          "$ref": "#/$defs/Restriction"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Occurrence": {
      "description": "Determines the cardinality of each element in a group",
      "type": "object",
      "properties": {
        "min": {
          "description": "The minimum number of instances of this element in the group",
          "type": "integer",
          "minimum": 0,
          "default": 1
        },
        "max": {
          "description": "The maximum number of instances of this element in the group. Setting this to a value of '-1' enables adding an unbounded number of elements",
          "type": "integer",
          "minimum": -1,
          "default": 1
        }
      }
    },
    "EipElement": {
      "description": "The base schema for all EIP Elements (e.g. EipComponent, EipChildElement)",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "childGroup": {
          "$ref": "#/$defs/EipChildGroup"
        }
      },
      "required": [
        "name"
      ]
    },
    "EipChildGroup": {
      "description": "A container for child elements used to indicate their order or mutual exclusivity",
      "type": "object",
      "properties": {
        "indicator": {
          "description": "The type of child grouping. When combined with each child element's 'Occurrence', constrains the child's order and cardinality",
          "type": "string",
          "enum": [
            "all",
            "choice",
            "sequence"
          ]
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/EipChildElement"
          }
        },
        "occurrence": {
          "$ref": "#/$defs/Occurrence"
        }
      },
      "required": [
        "indicator",
        "children"
      ]
    },
    "EipChildElement": {
      "description": "A child EIP element. Each child element is a descendant of a top-level EipComponent and can recursively contain more child elements",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/EipElement"
        }
      ],
      "properties": {
        "occurrence": {
          "$ref": "#/$defs/Occurrence"
        }
      }
    },
    "EipComponent": {
      "description": "A top-level EIP component",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/EipElement"
        }
      ],
      "properties": {
        "role": {
          "$ref": "eipRole.schema.json"
        },
        "connectionType": {
          "$ref": "connectionType.schema.json"
        }
      },
      "required": [
        "role",
        "connectionType"
      ]
    }
  }
}
