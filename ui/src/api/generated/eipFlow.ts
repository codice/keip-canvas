/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Describes the expected general behavior of an EIP component
 */
export type EipRole = "channel" | "endpoint" | "router" | "transformer";
/**
 * Defines a connection pattern for an EIP component
 */
export type ConnectionType =
  | "content_based_router"
  | "inbound_request_reply"
  | "passthru"
  | "request_reply"
  | "sink"
  | "source"
  | "tee";
/**
 * The attribute's value type (attribute keys are always strings)
 */
export type AttributeType = string | number | boolean;

/**
 * A representation of an EIP flow diagram as a collection of nodes and their corresponding edges
 */
export interface EipFlow {
  nodes?: EipNode[];
  edges?: FlowEdge[];
}
/**
 * An instance of an 'EipComponent' as a node in the flow diagram
 */
export interface EipNode {
  id: string;
  eipId: EipId;
  label?: string;
  description?: string;
  role: EipRole;
  connectionType: ConnectionType;
  attributes?: Attributes;
  children?: EipChildNode[];
}
/**
 * A combination of fields uniquely identifying a component in an 'EipComponentDefinition'
 */
export interface EipId {
  namespace: string;
  name: string;
}
/**
 * A map of EIP attributes belonging to the node
 */
export interface Attributes {
  [k: string]: AttributeType;
}
/**
 * An instance of an 'EipChildElement'. Can recursively contain more child nodes as well as attributes of its own.
 */
export interface EipChildNode {
  name: string;
  attributes?: Attributes;
  children?: EipChildNode[];
}
/**
 * A single edge in the flow diagram connecting two nodes
 */
export interface FlowEdge {
  id: string;
  source: string;
  target: string;
  type?: "default" | "discard";
}
